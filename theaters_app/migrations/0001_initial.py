# Generated by Django 5.0.4 on 2024-05-30 17:33

import django.db.models.deletion
import theaters_app.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=theaters_app.models.get_datetime, null=True, validators=[theaters_app.models.check_created], verbose_name='created')),
                ('modified', models.DateTimeField(blank=True, default=theaters_app.models.get_datetime, null=True, validators=[theaters_app.models.check_modified], verbose_name='modified')),
                ('title', models.TextField(verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('date', models.DateField(validators=[theaters_app.models.check_date], verbose_name='date')),
            ],
            options={
                'verbose_name': 'performance',
                'verbose_name_plural': 'performances',
                'db_table': '"api_data"."performance"',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Theater',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=theaters_app.models.get_datetime, null=True, validators=[theaters_app.models.check_created], verbose_name='created')),
                ('modified', models.DateTimeField(blank=True, default=theaters_app.models.get_datetime, null=True, validators=[theaters_app.models.check_modified], verbose_name='modified')),
                ('title', models.TextField(verbose_name='title')),
                ('address', models.TextField(verbose_name='address')),
                ('rating', models.DecimalField(decimal_places=2, default=5, max_digits=3, validators=[theaters_app.models.check_limits], verbose_name='rating')),
            ],
            options={
                'verbose_name': 'theater',
                'verbose_name_plural': 'theaters',
                'db_table': '"api_data"."theater"',
                'ordering': ['rating', 'title', 'address'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=theaters_app.models.get_datetime, null=True, validators=[theaters_app.models.check_created], verbose_name='created')),
                ('modified', models.DateTimeField(blank=True, default=theaters_app.models.get_datetime, null=True, validators=[theaters_app.models.check_modified], verbose_name='modified')),
                ('money', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[theaters_app.models.check_positive], verbose_name='money')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'client',
                'verbose_name_plural': 'clients',
                'db_table': '"api_data"."client"',
            },
        ),
        migrations.CreateModel(
            name='TheaterPerformance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=theaters_app.models.get_datetime, null=True, validators=[theaters_app.models.check_created], verbose_name='created')),
                ('performance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='theaters_app.performance', verbose_name='performance')),
                ('theater', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='theaters_app.theater', verbose_name='theater')),
            ],
            options={
                'verbose_name': 'relationship theater performance',
                'verbose_name_plural': 'relationships theater performance',
                'db_table': '"api_data"."theater_performance"',
                'unique_together': {('theater', 'performance')},
            },
        ),
        migrations.AddField(
            model_name='theater',
            name='performances',
            field=models.ManyToManyField(through='theaters_app.TheaterPerformance', to='theaters_app.performance', verbose_name='performances'),
        ),
        migrations.AddField(
            model_name='performance',
            name='theaters',
            field=models.ManyToManyField(through='theaters_app.TheaterPerformance', to='theaters_app.theater', verbose_name='theaters'),
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=theaters_app.models.get_datetime, null=True, validators=[theaters_app.models.check_created], verbose_name='created')),
                ('modified', models.DateTimeField(blank=True, default=theaters_app.models.get_datetime, null=True, validators=[theaters_app.models.check_modified], verbose_name='modified')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[theaters_app.models.check_positive], verbose_name='price')),
                ('time', models.TimeField(verbose_name='time')),
                ('place', models.TextField(verbose_name='place')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='theaters_app.client', verbose_name='client')),
                ('theater_performance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='theaters_app.theaterperformance', verbose_name='theater_performance')),
            ],
            options={
                'verbose_name': 'ticket',
                'verbose_name_plural': 'tickets',
                'db_table': '"api_data"."ticket"',
                'ordering': ['place'],
            },
        ),
    ]
